# Generated by Django 5.1.7 on 2025-05-12 20:18

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Period Name')),
                ('month', models.CharField(blank=True, choices=[('JANUARY', 'January'), ('FEBRUARY', 'February'), ('MARCH', 'March'), ('APRIL', 'April'), ('MAY', 'May'), ('JUNE', 'June'), ('JULY', 'July'), ('AUGUST', 'August'), ('SEPTEMBER', 'September'), ('OCTOBER', 'October'), ('NOVEMBER', 'November'), ('DECEMBER', 'December')], max_length=20, verbose_name='Month')),
                ('year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)], verbose_name='Year')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Period',
                'verbose_name_plural': 'Periods',
                'ordering': ['-start_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('text', models.TextField(verbose_name='Question Text')),
                ('help_text', models.TextField(blank=True, verbose_name='Help Text')),
                ('is_required', models.BooleanField(default=True, verbose_name='Required')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('min_value', models.IntegerField(blank=True, null=True, verbose_name='Minimum Value')),
                ('max_value', models.IntegerField(blank=True, null=True, verbose_name='Maximum Value')),
                ('dependent_value', models.CharField(blank=True, max_length=255, verbose_name='Dependent Value')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('dependent_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependent_questions', to='surveys.question')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('question_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='base.questiontype')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['survey', 'order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HierarchyItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('text', models.CharField(max_length=255, verbose_name='Item Text')),
                ('description', models.TextField(blank=True, verbose_name='Item Description')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Default Order')),
                ('level', models.PositiveSmallIntegerField(default=0, verbose_name='Hierarchy Level')),
                ('is_draggable', models.BooleanField(default=True, verbose_name='Is Draggable')),
                ('is_editable', models.BooleanField(default=True, verbose_name='Is Editable')),
                ('icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='Icon')),
                ('custom_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='Custom CSS Class')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='surveys.hierarchyitem')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hierarchy_items', to='surveys.question')),
            ],
            options={
                'verbose_name': 'Hierarchy Item',
                'verbose_name_plural': 'Hierarchy Items',
                'ordering': ['question', 'level', 'order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('text_answer', models.TextField(blank=True, verbose_name='Text Answer')),
                ('number_answer', models.FloatField(blank=True, null=True, verbose_name='Number Answer')),
                ('date_answer', models.DateField(blank=True, null=True, verbose_name='Date Answer')),
                ('boolean_answer', models.BooleanField(blank=True, null=True, verbose_name='Yes/No Answer')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.question')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'ordering': ['question__order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('text', models.CharField(max_length=255, verbose_name='Choice Text')),
                ('value', models.CharField(max_length=255, verbose_name='Value')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('color', models.CharField(blank=True, max_length=20, null=True, verbose_name='Color')),
                ('is_other_option', models.BooleanField(default=False, verbose_name="Is 'Other' Option")),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='surveys.question')),
            ],
            options={
                'verbose_name': 'Question Choice',
                'verbose_name_plural': 'Question Choices',
                'ordering': ['question', 'order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnswerChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_choices', to='surveys.answer')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selections', to='surveys.questionchoice')),
            ],
            options={
                'verbose_name': 'Answer Choice',
                'verbose_name_plural': 'Answer Choices',
                'ordering': ['choice__order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('respondent_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Respondent Email')),
                ('respondent_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Respondent Name')),
                ('respondent_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('is_complete', models.BooleanField(default=False, verbose_name='Completed')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responses', to='surveys.period')),
                ('respondent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Response',
                'verbose_name_plural': 'Responses',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='response',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.response'),
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('title', models.CharField(max_length=255, verbose_name='Survey Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('is_published', models.BooleanField(default=False, verbose_name='Published')),
                ('questions_per_page', models.PositiveSmallIntegerField(default=5, help_text='Default number of questions to display per page', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Questions Per Page')),
                ('allow_save_and_continue', models.BooleanField(default=True, help_text='Allow respondents to save their progress and continue later', verbose_name='Allow Save and Continue Later')),
                ('show_progress_bar', models.BooleanField(default=True, help_text='Display progress bar to respondents', verbose_name='Show Progress Bar')),
                ('allow_page_navigation', models.BooleanField(default=True, help_text='Allow respondents to navigate freely between pages', verbose_name='Allow Free Page Navigation')),
                ('show_results_after_completion', models.BooleanField(default=False, help_text='Show survey results to respondents after they complete the survey', verbose_name='Show Results After Completion')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Survey',
                'verbose_name_plural': 'Surveys',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='response',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='surveys.survey'),
        ),
        migrations.AddField(
            model_name='question',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='surveys.survey'),
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('name', models.CharField(max_length=255, verbose_name='Indicator Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('count_value', models.PositiveIntegerField(default=0, verbose_name='Count')),
                ('numeric_value', models.FloatField(blank=True, null=True, verbose_name='Numeric Value')),
                ('percentage_value', models.FloatField(blank=True, null=True, verbose_name='Percentage')),
                ('category', models.CharField(blank=True, max_length=100, verbose_name='Category')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='surveys.period')),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='surveys.question')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='surveys.survey')),
            ],
            options={
                'verbose_name': 'Indicator',
                'verbose_name_plural': 'Indicators',
                'ordering': ['period', 'survey', 'category', 'name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HierarchyAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha de Creación')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Fecha de Modificación')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Activo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Position/Rank')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hierarchy_answers', to='surveys.answer')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Eliminado por')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)s_set', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_answers', to='surveys.hierarchyitem')),
                ('selected_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_selections', to='surveys.hierarchyitem')),
            ],
            options={
                'verbose_name': 'Hierarchy Answer',
                'verbose_name_plural': 'Hierarchy Answers',
                'ordering': ['answer', 'position'],
                'abstract': False,
                'indexes': [models.Index(fields=['is_active', '-created_at'], name='surveys_hie_is_acti_9289fd_idx'), models.Index(fields=['answer'], name='surveys_hie_answer__43386e_idx'), models.Index(fields=['item'], name='surveys_hie_item_id_463528_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='period',
            index=models.Index(fields=['is_active', '-created_at'], name='surveys_per_is_acti_d3e15f_idx'),
        ),
        migrations.AddIndex(
            model_name='period',
            index=models.Index(fields=['year', 'month'], name='surveys_per_year_ff40b8_idx'),
        ),
        migrations.AddIndex(
            model_name='period',
            index=models.Index(fields=['start_date', 'end_date'], name='surveys_per_start_d_76573f_idx'),
        ),
        migrations.AddIndex(
            model_name='hierarchyitem',
            index=models.Index(fields=['is_active', '-created_at'], name='surveys_hie_is_acti_ddbad1_idx'),
        ),
        migrations.AddIndex(
            model_name='hierarchyitem',
            index=models.Index(fields=['question', 'level', 'order'], name='surveys_hie_questio_c1d505_idx'),
        ),
        migrations.AddIndex(
            model_name='hierarchyitem',
            index=models.Index(fields=['parent'], name='surveys_hie_parent__350f4f_idx'),
        ),
        migrations.AddIndex(
            model_name='questionchoice',
            index=models.Index(fields=['is_active', '-created_at'], name='surveys_que_is_acti_f0118b_idx'),
        ),
        migrations.AddIndex(
            model_name='questionchoice',
            index=models.Index(fields=['question', 'order'], name='surveys_que_questio_d8672f_idx'),
        ),
        migrations.AddIndex(
            model_name='answerchoice',
            index=models.Index(fields=['is_active', '-created_at'], name='surveys_ans_is_acti_37f15c_idx'),
        ),
        migrations.AddIndex(
            model_name='answerchoice',
            index=models.Index(fields=['answer'], name='surveys_ans_answer__122976_idx'),
        ),
        migrations.AddIndex(
            model_name='answerchoice',
            index=models.Index(fields=['choice'], name='surveys_ans_choice__7f0945_idx'),
        ),
        migrations.AddIndex(
            model_name='answer',
            index=models.Index(fields=['is_active', '-created_at'], name='surveys_ans_is_acti_5774f3_idx'),
        ),
        migrations.AddIndex(
            model_name='answer',
            index=models.Index(fields=['response', 'question'], name='surveys_ans_respons_b08100_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['is_active', '-created_at'], name='surveys_sur_is_acti_544271_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['title'], name='surveys_sur_title_97c94a_idx'),
        ),
        migrations.AddIndex(
            model_name='survey',
            index=models.Index(fields=['is_published'], name='surveys_sur_is_publ_f40fa8_idx'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['is_active', '-created_at'], name='surveys_res_is_acti_fc5dda_idx'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['survey', 'is_complete'], name='surveys_res_survey__ec73da_idx'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['period'], name='surveys_res_period__33d64c_idx'),
        ),
        migrations.AddConstraint(
            model_name='response',
            constraint=models.UniqueConstraint(fields=('survey', 'respondent_email'), name='unique_email_per_survey'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['is_active', '-created_at'], name='surveys_que_is_acti_a6c0b6_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['survey', 'order'], name='surveys_que_survey__d73192_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['question_type'], name='surveys_que_questio_5191f7_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['is_active', '-created_at'], name='surveys_ind_is_acti_075bd5_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['period', 'survey'], name='surveys_ind_period__1b2678_idx'),
        ),
        migrations.AddIndex(
            model_name='indicator',
            index=models.Index(fields=['category'], name='surveys_ind_categor_da27ff_idx'),
        ),
    ]
